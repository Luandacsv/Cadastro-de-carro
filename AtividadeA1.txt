/*  CODIGO ESCRITO PARA QUE FOSSE TRATADOS DE
    QUASE TODAS AS POSSIBILIDADES DE ENTRADA DO
    USUARIO SEM QUE FOSSE NECESSARIO USAR DE 
    TRATAMENTO DE ERROS, NAO FOSSE USADO 'POO',
    FOSSE QUASE QUE POR COMPLETAMENTE ESTRUTURADA,
    SIMPLES DE SE INDENTIFICAR CADA FUNCAO/BLOCOS DE CODIGO
    E DIDATICO. 
*/
/*  --------------------------------------------------------------------
    |                  SISTEMA DE CADASTRO DE                          |
    |                       VEICULOS                                   |
    --------------------------------------------------------------------
*/

#include <iostream>
#include <string>
#include <cstring> //importada pra usar strlen()
#include <windows.h>//importada pra usar Sleep()

using namespace std;
//variaveis globais
const int tam = 10;
static int index = 0;  //variavel estatica para leitura analize geral dos vetores
string registro[4][tam]; // vetor usado para armazenar os veiculos cadastrados
//funcao que apresenta na tela de acordo com o index
string screen(int val){
    string frase;
    if(val == 0){frase = "\nMARCA: ";
    }else if (val == 1){frase = "\nMODELO: ";
    }else if (val == 2){frase = "\nANO: ";
    }else if (val == 3){frase = "\nPLACA: ";
    }else{frase = "ERRO";}
    return frase;
}
//funcao simples que apresenta o menu/opcoes ao usuario
void menu(){
    cout << "\n-----ESCOLHA UMA OPICAO-----";
    cout << "\n1 - CADASTRO de veiculos";
    cout << "\n2 - LISTA de veiculos cadastrados";
    cout << "\n3 - BUSCAR POR MODELO cadastrados";
    cout << "\n4 - BUSCAR PELO ANO veiculos";
    cout << "\n5 - BUSCAR Por ANO ACIMA de:";
    cout << "\n0 - SAIR\ndigite:  ";
}
//funcao chamada caso o usuario seleciole cadastro, que ira registrar os dados no vetor registro
void cadastro(){
    while(true){ //loop simples para multiplos cadastros
        if(index >= tam){ // uma verificação de espaço no vetor
            cout << "\n...limite atingido...";
            break;
        }
        int controle;  // variavel pra controle do loop
        cout << "\nDigite a MARCA do veiculo: ";
        cin >> registro[0][index];
        cout << "\nDigite o MODELO do veiculo: ";
        cin >> registro[1][index];
        cout << "\nDigite o ANO do veiculo: ";
        cin >> registro[2][index];
        cout << "\nDigite a PLACA do veiculo.\nobs: O formato deve ser (XXX-YYYY): ";
        cin >> registro[3][index];

        while (registro[3][index].length() != 8){ // repeticao que ficara ate satisfazer o formato correto
            cout << "\nFormato incorreto...\ndigite novamente:\nPlACA: ";
            cin >> registro[3][index];}

        index++; // um incremento para a funcao estatica guardar o valor  de veiculos cadastrados
        cout << "\n----CADASTRO COMPLETO----\nGostaria de cadastrar mais?\n1-SIM    0-NAO:\n";
        cin >> controle;

        if(controle == 1){
            continue;
        }
        else if(controle == 0){
            break;
        }
        else{cout << "\nopcao invalida\n ...voltando ao menu.";
            Sleep(2500);
        }
        system("cls"); // limpa a tela
    }
}
// funcao que lista todos o veiculos guardados
void listar(){
    for(int i = 0;i<tam;i++){
        if(i == index){ // caso o loop tenha sido executado a mesma quantidade que cadastros, esta condicao finalizara o loop
            break;
        }
        cout << "\nRegistro: ----- " << i + 1 << " -----\n";
        for (int j = 0; j < 4; j++){
          cout << screen(j) << registro[j][i]; // mostra de forma organizada os cadastros
        }
        cout << "\n___________________________\n";
    }
}
// funcao que busca pelo modelo informado
void buscaModelo(){
    int controle = 1;
    string modelo;
    int analisados = 0; // uma variavel de controle que verifica se há o modelo informado

    while(controle == 1){ // loop simples pra fazer varias buscas
        cout << "\n---BUSCAR POR MODELO---\nQual o Modelo: ";
        cin >> modelo;
        cout << "\n Fazendo Busca...";
        Sleep(1500);

        for(int i=0;i < index;i++){
            if(registro[1][i] == modelo){
                cout << "\nregistro: ----- "<< i+1 << " -----";
                cout << "\nMODELO: " << registro[1][i];
                cout << "\nMARCA: " << registro[0][i];
                cout << "\nANO: " << registro[2][i];
                cout << "\nPLACA: " << registro[3][i];
                analisados++; // incrementa a cada cadastro correspondente  ao informado
            }
        }
        // condicoes para continuar a execuçao do codigo
        if(analisados == 0){ cout<<"\nExistem: "<<index<<" Veiculos no registro, mas nenhum com o informado.\nVerifique se digitou corretamente.";
        }// caso nenhum modelo tenha correspondido este if informa ao usuario
        cout << "\nGostaria de refazer a Busca? (1 - SIM| 0 - NAO): ";
        cin >> controle;
        //condicoes que podem parar o loop de acordo com a opcao escolhida
        if(controle == 0){
            controle = 0;
            break;
        }else if(controle == 1){
            analisados = 0;
            continue;
        }else{
            cout << "\nOpcao invalida... Voltando ao menu";
            controle = 0;
            Sleep(2000);
            break;
        }
    }
}
// funcao pra fazer uma BUSCA nos cadastrados pelo mesmo ANO ou ACIMA
void busca(int valor){
    int anoRecebido;
    int analisados = 0;
    cout << "\n---BUSCAR POR ANO---\nQual o ANO: ";
    cin >> anoRecebido;
    for(int i = 0;i < index;i++){
        if(stoi(registro[2][i])==anoRecebido && valor == 1){ //stoi é uma funcao que converte string para int
            cout <<"\nregistro: ----- "<< i+1 << " -----";
            cout <<"\nANO: "<<registro[2][i];
            cout <<"\nMARCA: "<<registro[0][i];
            cout <<"\nMODELO: "<<registro[1][i];
            cout <<"\nPLACA: "<<registro[3][i];
            analisados++
        }
        if(stoi(registro[2][i])> anoRecebido && valor == 2){ //stoi é uma funcao que converte string para int
            cout <<"\nregistro: ----- "<< i+1 << " -----";
            cout <<"\nANO: "<<registro[2][i];
            cout <<"\nMARCA: "<<registro[0][i];
            cout <<"\nMODELO: "<<registro[1][i];
            cout <<"\nPLACA: "<<registro[3][i];
            analisados++
        }
    }
    if(analisados == 0){ // informa ao usuario caso nao encontre registros
        cout << "\nNao foi encontrado nenhum registro igual ao informado.\n"
    }
}
//funcao principal C++
int main(){
    bool verdade = true; // variavel para controle do proximo loop
    int option;
    while (verdade){
        menu(); // mostra o menu de opçãoes
        cin >> option ; // captura a entrada fornecida pelo usuario
        switch (option){
        case 0: // caso escolhido cancela o loop e encerra o processo
            verdade = false;
            break; 
        case 1: // caso escolhido mostra ao usuario a ficha de cadastro
            cadastro();
            system("cls");
            break;
        case 2: //caso escolhido lista ao usuario todos os modelos registrados
            system("cls");
            listar();
            break;
        case 3: // caso escolhido chamara a funcao que fara a busca pelo modelo do veiculo
            system("cls");
            buscaModelo();
            break;
        case 4: // caso escolhido chama a funcao buscar que fara a busca pelo ano informado
            system("cls");
            busca(1); // o valor 1 indica que buscará pelo numero exato
            break;
        case 5: // caso escolhi chamara a funcao que fara a busca por registro com o ano acima do informado
            system("cls");
            busca(2); // o valor 2 indica que buscará por numero acima do informado
            break;
                }
    }
    cout << "saindo ..."; // aviso de fim do processo do codigo
    Sleep(2000); // um tempo pra uma saida dramatica
    return 0;
}
